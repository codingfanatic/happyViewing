<?xml version="1.0" encoding="utf-8"?>
<!--
7-9
Set the background xml element to black
Added a TextView with "Happy Birthday!" and a hard coded width/height
**
ConstraintLayouts use app:layout_constraintBottom_toBottomOf
It seems like these allow pinpoint positioning of Views
I'll stick to RelativeLayouts for the time being as I follow the udacity examples

7-10
Updated to LinearLayout instead.
Centered TextViews on screen
Styled text
-Set layout weights
-Set text sizes
-Centered overflowing text
**
layout_width="match_parent" sets the width to that of the parent
layout_height="wrap content" wraps the view around its contents
android:layout_centerHorizontal="true" centers a view within its parent (kufufu)
-This can be used to center the title and options as well

LinearLayout aligns Views horizontally or vertically

android:layout_gravity="center" configures the placement of a component inside its container
-->
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="#000000"
    tools:context="com.example.happyviewing.MainActivity">

    <TextView
        android:text="Happy Birthday!"
        android:textColor="#007700"
        android:textSize="25pt"
        android:textAlignment="center"
        android:background="#000000"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:padding="40dp"
        android:layout_gravity="center"
        android:layout_weight="1"
        />

    <TextView
        android:text="Option1\n\nOption 2"
        android:textSize="20pt"
        android:textColor="#FFFF00"
        android:background="#000000"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:padding="40dp"
        android:layout_gravity="center"
        android:layout_weight="2"
        />





</LinearLayout>

